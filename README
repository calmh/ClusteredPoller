RTG Clustered Poller
====================

rtgpoll
-------

RTG:s standard poller (rtgpoll) is a fast and stable multithreaded SNMP
poller. Unfortunately it isn't completely optimized for large deployments with
hundreds or thousands of devices and many different counters. Rtgpoll uses a
worker thread model where all targets (Host+OID combination) are put in a
large pool and then handled separately. This doesn't take advantage of the
fact that all results of the same type (for example all ifInOctets values)
from one device are going to end up in the same database table. Since all
queries are made individually, rtgpoll will do open, insert, close many times
for each table.

clpoll
------

The clustered poller (clpoll) treats each host as a unit, and takes care to
only ever do one insert per table per interval. This reduces the amount of
table opens and inserts by about 90% in our environment, with a corresponding
effect on server load.

Differences against standard rtgpoll, "+" for positive and "-" for negative,
are:

+ Clustered inserts reduces database load.

+ Database rows are dated based on when the result was read, not when it was
  inserted into the database.

- It only supports MySQL backend. [1]

- Clustered polls potentially increases load on monitored devices.

- Less testing so probably more bugs. :)

In all other aspects, clpoll strives to be backwards compatible with rtgpoll.
In particalar, it should be able to read the same configuration files and
produce measurement data in an identical format. It should be a simple drop-in
replacement.

[1] Support for other database backends would probably amount to 10-20 lines
of code. I would accept such patches if they were made.

Installation
------------

Clpoll depends on libmysql++ and net-snmp. Make sure these are available.

Run make. It should produce a binary called clpoll. Use this in the same way
you would use rtgpoll.

Jakob Borg <jakob@nym.se>
2009-12-25
